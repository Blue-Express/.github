name: Template - Java Kafka Consumers on AWS EKS

on:
  push:
    branches: [development, staging, production]
    paths-ignore:
      - '.github/workflows/**'

  workflow_dispatch:

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - name: Set up JDK 11
       uses: actions/setup-java@v1
       with:
         java-version: '11' # The JDK version to make available on the path.
         java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
         architecture: x64
     - name: Checkstyle
       run: mvn checkstyle:checkstyle -DskipTests
     - name: Sonarqube
       run: mvn verify sonar:sonar -DskipTests -Dsonar.host.url=${{ secrets.SONARQUBE_DEV_URL }} -Dsonar.login=${{ secrets.SONARQUBE_DEV_TOKEN }}
     - name: Read value from Properties-file check Quality Gate
       id: read_property
       uses: christian-draeger/read-properties@1.0.1
       with:
         path: './target/sonar/report-task.txt'
         property: 'ceTaskId'
     - name: Show ceTaskId
       run: echo ${{ steps.read_property.outputs.value }}
     - name: Show Github ref
       run: echo ${{ github.ref }}
     - name: Break Build Quality Gate
       run: sh ./break_build.sh ${{ secrets.SONARQUBE_DEV_URL }} ${{ secrets.SONARQUBE_DEV_TOKEN }} ${{ steps.read_property.outputs.value }}

  build:
    uses: Blue-Express/bx_templates/.github/workflows/build-java.yml@blue
    needs: sonar

  push-img:
    uses: Blue-Express/bx_templates/.github/workflows/push-java.yml@blue
    needs: build
    with:
      environment: ${{ github.ref_name }}
    secrets:
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

### deploy consumer
  deploy-csmr00:
    uses: Blue-Express/bx_templates/.github/workflows/deploy-helm-java-api.yml@blue
    needs: push-img
    with:
      suffix: -csmr00
      cert-path: true
      environment: ${{ github.ref_name }}
      namespace: ns-name
      path-values: helm/values-${{ github.ref_name }}-csmr00.yml
      base-path: /api/domain/v1/csmr00
      liveness-path: /actuator/health
      liveness-initialDelay: '90'
      liveness-periodoSeconds: '60'
      liveness-timeoutSeconds: '20'
      # Recursos Base
      cpu-base: '50m'
      memory-base: '128Mi'
      # Límite Recursos Default
      cpu-limit: '350m'
      memory-limit: '380Mi'
      replicas: '1'
      # Límite Recursos Dev
      cpu-limit-dev: '350m'
      memory-limit-dev: '380Mi'
      replicas-dev: '1'
      # Límite Recursos Qa
      cpu-limit-qa: '350m'
      memory-limit-qa: '380Mi'
      replicas-qa: '1'
      # Límite Recursos Prod
      cpu-limit-prod: '350m'
      memory-limit-prod: '380Mi'
      replicas-prod: '1'
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_KUBECONFIG: ${{ secrets.AWS_KUBECONFIG }}
      TOKEN_REPO_TEMPLATE: ${{ secrets.REPO_HELM_ACCESS }}
      SECRETOS: ${{ toJSON(secrets) }}
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}

### deploy consumer retry 01
  deploy-csmr01:
    uses: Blue-Express/bx_templates/.github/workflows/deploy-helm-java-api.yml@blue
    needs: push-img
    with:
      suffix: -csmr01
      cert-path: true
      replicas: '1'
      environment: ${{ github.ref_name }}
      namespace: ns-name
      path-values: helm/values-${{ github.ref_name }}-csmr01.yml
      base-path: /api/domain/v1/csmr01
      liveness-path: /actuator/health
      liveness-initialDelay: '90'
      liveness-periodoSeconds: '60'
      liveness-timeoutSeconds: '20'
      cpu-base: '100m'
      memory-base: '128Mi'
      cpu-limit: '200m'
      memory-limit: '380Mi'
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_KUBECONFIG: ${{ secrets.AWS_KUBECONFIG }}
      TOKEN_REPO_TEMPLATE: ${{ secrets.REPO_HELM_ACCESS }}
      SECRETOS: ${{ toJSON(secrets) }}
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}

### deploy consumer retry 02
  deploy-csmr02:
    uses: Blue-Express/bx_templates/.github/workflows/deploy-helm-java-api.yml@blue
    needs: push-img
    with:
      suffix: -csmr02
      cert-path: true
      replicas: '1'
      environment: ${{ github.ref_name }}
      namespace: ns-name
      path-values: helm/values-${{ github.ref_name }}-csmr02.yml
      base-path: /api/domain/v1/csmr02
      liveness-path: /actuator/health
      liveness-initialDelay: '90'
      liveness-periodoSeconds: '60'
      liveness-timeoutSeconds: '20'
      cpu-base: '100m'
      memory-base: '128Mi'
      cpu-limit: '200m'
      memory-limit: '380Mi'
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_KUBECONFIG: ${{ secrets.AWS_KUBECONFIG }}
      TOKEN_REPO_TEMPLATE: ${{ secrets.REPO_HELM_ACCESS }}
      SECRETOS: ${{ toJSON(secrets) }}
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
