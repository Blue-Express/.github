name: Template - Java CronJob on AWS EKS

on:
  push:
    branches: [development, staging, production]
    paths-ignore:
      - '.github/workflows/**'

  workflow_dispatch:

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v3
     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
         java-version: '17' # The JDK version to make available on the path.
         java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
         architecture: x64
         distribution: 'temurin'
     - name: Checkstyle
       run: mvn checkstyle:checkstyle -DskipTests
     - name: SonarqubeV2
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
         SONAR_TOKEN: ${{ secrets.SONARQUBE_DEV_TOKEN_V2 }}
         SONAR_HOST_URL: ${{ secrets.SONARQUBE_DEV_URL_V2 }}
       run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ github.event.repository.name }}
     - name: Read value from Properties-file check Quality Gate
       id: read_property
       uses: christian-draeger/read-properties@1.0.1
       with:
         path: './target/sonar/report-task.txt'
         property: 'ceTaskId'
     - name: Show ceTaskId
       run: echo ${{ steps.read_property.outputs.value }}
     - name: Show Github ref
       run: echo ${{ github.ref }}
     - name: Break Build Quality Gate
       run: sh ./break_build.sh ${{ secrets.SONARQUBE_DEV_URL_V2 }} ${{ secrets.SONARQUBE_DEV_TOKEN_V2 }} ${{ steps.read_property.outputs.value }}

  build:
    uses: Blue-Express/bx_templates/.github/workflows/build-java17.yml@blue
    needs: sonar
    # with:
      # install-pkg: "maven"

  push-img:
    uses: Blue-Express/bx_templates/.github/workflows/push-java.yml@blue
    needs: build
    with:
      environment: ${{ github.ref_name }}
    secrets:
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

### deploy cronjob
  deploy:
    uses: Blue-Express/bx_templates/.github/workflows/deploy-helm-java-cronjob.yml@blue
    needs: push-img
    with:
      schedule: '*/20 * * * *'
      environment: ${{ github.ref_name }}
      namespace: ns-name                              # Reemplazar al correspondiente
      path-values: helm/values-${{ github.ref_name }}.yml
      success-history: '3'
      failed-history: '3'
      seconds-finished: '100'
      backoff-limit: '3'
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_KUBECONFIG: ${{ secrets.AWS_KUBECONFIG }}
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
      TOKEN_REPO_TEMPLATE: ${{ secrets.REPO_HELM_ACCESS }}
      SECRETOS: ${{ toJSON(secrets) }}
