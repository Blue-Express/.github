name: Template - Java CronJob on AWS EKS

on:
  push:
    branches: [development, staging, production]
    paths-ignore:
      - '.github/workflows/**'

  workflow_dispatch:

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan Workflow for Java
        uses: Blue-Express/bx-templates/sonarqube-scan-java@blue
        with:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_V3 }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL_V3 }}
          java-version: '17'      # Allowed versions: "17", "21".
          build-system: 'maven'   # Allowed values: "maven", "gradle".
          coverage-tool: 'jacoco' # Allowed values: "jacoco".
          sonarVervose: 'false'   # Optional. Default: "false".
          sonarExclusions: ''     # Optional. Example: '**/entities/*.java,**/entity/*.java,**/dto/*.java'
          coverageExclusions: ''  # Optional.
  sonar-url:
    needs: sonar-scan
    runs-on: ubuntu-latest
    environment:
      name: "sonar"
      url: https://sonarqube.infra.blue.cl/dashboard?id=${{ github.event.repository.name }}
    steps:
      - name: Información de SonarQube
        run: echo "El análisis de SonarQube se ha completado."

  build:
    uses: Blue-Express/bx_templates/.github/workflows/build-java17.yml@blue
    needs: sonar-scan
    # with:
      # install-pkg: "maven"

  push-img:
    uses: Blue-Express/bx_templates/.github/workflows/push-java.yml@blue
    needs: build
    with:
      environment: ${{ github.ref_name }}
    secrets:
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

### deploy cronjob
  deploy:
    uses: Blue-Express/bx_templates/.github/workflows/deploy-helm-java-cronjob.yml@blue
    needs: push-img
    with:
      schedule: '*/20 * * * *'
      environment: ${{ github.ref_name }}
      namespace: ns-name                              # Reemplazar al correspondiente
      path-values: helm/values-${{ github.ref_name }}.yml
      success-history: '3'
      failed-history: '3'
      seconds-finished: '100'
      backoff-limit: '3'
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_KUBECONFIG: ${{ secrets.AWS_KUBECONFIG }}
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
      TOKEN_REPO_TEMPLATE: ${{ secrets.REPO_HELM_ACCESS }}
      SECRETOS: ${{ toJSON(secrets) }}
