name: you-name-here

on:
  push:
    branches: [development, staging, production]
    paths-ignore:
      - '.github/workflows/**'

  workflow_dispatch:

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan Workflow for Node.js
        uses: Blue-Express/bx-templates/sonarqube-scan-node@blue
        with:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_V3 }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL_V3 }}
          project-key: ${{ github.event.repository.name }}
          node-version: '20'        # 18 o '20', según corresponda
          package-manager: 'npm'    # npm o 'yarn', según corresponda 
          test-framework: 'jest'    # jest o 'mocha', según corresponda
          sonarVervose: 'false'     # Optional. Default: "false".
          sonarExclusions: ''       # Opcional: especifica archivos o carpetas a excluir.
          coverageExclusions: ''    # Opcional: especifica archivos o carpetas a excluir de la cobertura.
  sonar-url:
    needs: sonar-scan
    if: always()
    runs-on: ubuntu-latest
    environment:
      name: "sonar"
      url: https://sonarqube.infra.blue.cl/dashboard?id=${{ github.event.repository.name }}
    steps:
      - name: Información de SonarQube
        run: echo "El análisis de SonarQube se ha completado."

  build:
    uses: Blue-Express/bx_templates/.github/workflows/build-and-push-nodejs.yml@blue
    needs: sonar-scan
    with:
      install-pkg: "npm"
      environment: ${{ github.ref_name }}
    secrets:
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

### deploy cronjob
  deploy:
    uses: Blue-Express/bx_templates/.github/workflows/deploy-helm-node-cronjob.yml@blue
    needs: build
    with:
      schedule: '0 * * * *'
      environment: ${{ github.ref_name }}
      namespace: ns-namespace                               # Reemplazar {namespace} por el {name} del NS
      path-values: helm/values-${{ github.ref_name }}.yml
      success-history: '3'
      failed-history: '3'
      seconds-finished: '100'
      backoff-limit: '3'
      concurrencyPolicy: Forbid
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_KUBECONFIG: ${{ secrets.AWS_KUBECONFIG }}
      AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
      TOKEN_REPO_TEMPLATE: ${{ secrets.REPO_HELM_ACCESS }}
      SECRETOS: ${{ toJSON(secrets) }}
