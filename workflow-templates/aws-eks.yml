name: Deploy Java with Maven to Amazon EKS

on:
  push:
    branches: [$default-branch]
  pull_request:
    branches: [$default-branch]
    
env:
  AWS_REGION: MY_AWS_REGION                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
  AWS_DEV_ACCESS: AWS_DEV_ACCESS

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: development # production, staging, or development
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
        
    - name: Get repository name
      shell: bash
      run:  |
        echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
        
    - name: CheckStyle
      run: mvn checkstyle:checkstyle -DskipTests        
  
    - name: Extract branch name
      shell: bash
      run:  |
        echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
          
    - name : Compute Docker Image Tag
      if: ${{ github.ref == 'refs/heads/develop' }}
      run:  |
         echo "IMAGE_TAG=$(echo $BRANCH_NAME-${GITHUB_SHA})" >> $GITHUB_ENV

    - name: run docker build
      if: ${{ github.ref == 'refs/heads/develop' }}
      run: docker build . --file Dockerfile --tag ${REPO_NAME}:$IMAGE_TAG

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
  
